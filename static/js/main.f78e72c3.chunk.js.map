{"version":3,"sources":["Data/skills-store.js","Components/priorityQ.component.jsx","Components/table.component.jsx","Components/Loading/loading.component.jsx","Components/graph.component.jsx","Components/Layout/header.component.jsx","App.js","serviceWorker.js","Config/theme.js","index.js"],"names":["basicFrontEndSkills","id","name","time","basicFrontEndEdges","PriorityQueue","this","values","val","distance","push","sort","shift","a","b","SimpleTable","props","resetComponent","setState","rows","createData","task","hours","populateRows","data","times","row","total","result","i","length","item","state","console","log","Grid","container","justify","style","marginBottom","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","variant","align","TableBody","map","key","scope","Component","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","done","undefined","className","options","height","width","Graph","fastestPath","adjacencyList","individualTimes","displayResults","skill","Promise","resolve","reject","setTimeout","buildGraph","Object","keys","addEdges","djikstra","skillNodes","getSkillData","node","addVertex","value","edge","v1","filter","obj","v2","weight","prevProps","then","response","catch","error","startID","finishID","nodes","distances","previous","start","finish","enqueue","Infinity","currentNode","dequeue","referenceToLastNode","unshift","neighbor","candidate","output","useStyles","makeStyles","theme","title","marginTop","spacing","Header","classes","AppBar","position","Toolbar","Typography","gutterBottom","formControl","margin","minWidth","selectEmpty","App","React","useState","setSkill","FormControl","Select","labelId","displayEmpty","onChange","event","target","MenuItem","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","background","default","ReactDOM","render","Fragment","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f78e72c3.chunk.js","sourcesContent":["const basicFrontEndSkills = [\n    {\n        id: 1,\n        name: \"HTML5 Basics (Semantic Elements, Attributes)\",\n        time: 10\n    },\n    {\n        id: 2,\n        name: \"CSS Fundamentals\",\n        time: 20\n    },\n    {\n        id: 3,\n        name: \"CSS Grid and Flexbox\",\n        time: 5\n    },\n    {\n        id: 4,\n        name: \"CSS Custom Properties\",\n        time: 5\n    },\n    {\n        id: 5,\n        name: \"CSS Transitions\",\n        time: 2\n    },\n    {\n        id: 6,\n        name: \"Responsive Design\",\n        time: 10\n    },\n    {\n        id: 7,\n        name: \"SASS\",\n        time: 4\n    },\n    {\n        id: 8,\n        name: \"LESS\",\n        time: 7\n    },\n    {\n        id: 9,\n        name: \"Stylus\",\n        time: 6\n    },\n    {\n        id: 10,\n        name: \"PostCSS\",\n        time: 10\n    },\n    {\n        id: 11,\n        name: \"Bootstrap\",\n        time: 20\n    },\n    {\n        id: 12,\n        name: \"Tailwind CSS\",\n        time: 10\n    },\n    {\n        id: 13,\n        name: \"Materialize\",\n        time: 10\n    },\n    {\n        id: 14,\n        name: \"Bulma\",\n        time: 15\n    },\n    {\n        id: 15,\n        name: \"Vanilla Javascript\",\n        time: 30\n    },\n    {\n        id: 16,\n        name: \"Git (Version Control)\",\n        time: 5\n    },\n    {\n        id: 17,\n        name: \"Browser Dev Tools\",\n        time: 1\n    },\n    {\n        id: 18,\n        name: \"NPM\",\n        time: 1\n    },\n    {\n        id: 19,\n        name: \"Yarn\",\n        time: 1\n    },\n    {\n        id: 20,\n        name: \"Webpack\",\n        time: 3\n    },\n    {\n        id: 21,\n        name: \"Parcel\",\n        time: 2\n    },\n    {\n        id: 22,\n        name: \"Domain Registration\",\n        time: 3\n    },\n    {\n        id: 23,\n        name: \"Netlify\",\n        time: 2\n    },\n    {\n        id: 24,\n        name: \"Github Pages\",\n        time: 0.5\n    },\n    {\n        id: 25,\n        name: \"Basic Front-end Developer\",\n        time: 0\n    }\n]\n\nconst basicFrontEndEdges = [\n   [1,2],\n   [2,3],\n   [3,4],\n   [4,5],\n   [5,6],\n   [6,7],\n   [6,8],\n   [6,9],\n   [6,10],\n   [7,11],\n   [7,12],\n   [7,13],\n   [7,14],\n   [8,11],\n   [8,12],\n   [8,13],\n   [8,14],\n   [9,11],\n   [9,12],\n   [9,13],\n   [9,14],\n   [10,11],\n   [10,12],\n   [10,13],\n   [10,14],\n   [11,15],\n   [12,15],\n   [13,15],\n   [14,15],\n   [15,16],\n   [16,17],\n   [17,18],\n   [17,19],\n   [18,20],\n   [18,21],\n   [19,20],\n   [19,21],\n   [20,22],\n   [21,22],\n   [22,23],\n   [22,24],\n   [23,25],\n   [24,25] \n]\n\nexport {\n    basicFrontEndSkills,\n    basicFrontEndEdges\n}","export default class PriorityQueue {\n    constructor() {\n        this.values = []\n    }\n    \n    enqueue(val, distance) {\n        this.values.push({ val, distance })\n        this.sort()\n    }\n    \n    dequeue() {\n        let item = this.values.shift()\n        return item\n    }\n    \n    sort() {\n        this.values.sort((a, b) => a.distance - b.distance)\n    }\n}","import React, {Component} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Grid } from '@material-ui/core';\n \n\n\n\n\nexport default class SimpleTable extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            rows: []\n        }\n    }\n\n    componentDidMount() {\n        this.populateRows(this.props.data, this.props.times);\n        console.log(\"here\", this.rows);\n    }\n\n    componentWillUnmount() {\n        this.resetComponent();\n    }\n\n    resetComponent = () => {\n        this.setState({\n            rows: []\n        })\n    }\n\n\n\n    createData = (task, hours) => {\n        return {task , hours};\n    }\n\n    populateRows = (data, times) => {\n        let total = 0;\n        let row;\n        let result = [];\n\n        for (let i = 0; i < data.length; i++) {\n            let item = data[i];\n\n            if (i === data.length - 1) {\n                row = this.createData(item[0], total);\n            }else {\n                total += times[item[0]];\n                row = this.createData(item[0], times[item[0]]);\n            }\n\n            result.push(row);\n        }\n\n        this.setState({\n            rows: result\n        })\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\" style={{marginBottom: \"20px\"}}>\n                <Grid item>\n                    <TableContainer component={Paper}>\n                    <Table  aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell variant=\"head\">Step</TableCell>\n                            <TableCell align=\"right\" variant=\"head\">Number of Hours</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {this.state.rows.map((row) => (\n                            <TableRow key={row.task}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.task}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.hours}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                    </TableContainer>\n                </Grid>\n            </Grid>\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport FadeIn from 'react-fade-in';\nimport Lottie from 'react-lottie';\nimport ReactLoading from 'react-loading';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Grid } from '@material-ui/core';\nimport * as networkAnimation from \"../../Data/network-animation.json\"\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: networkAnimation.default,\n    rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n    }\n}\n\nexport default class Loading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            done: undefined\n        }\n    }\n\n    render () {\n        return (\n            <Grid container justify=\"center\">\n                <FadeIn>\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <Lottie options={defaultOptions} height={440} width={440} />                      \n                </div>\n                </FadeIn>\n            </Grid>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {basicFrontEndSkills, basicFrontEndEdges} from '../Data/skills-store';\nimport PriorityQueue from './priorityQ.component';\nimport Table from './table.component';\nimport LoadingScreen from './Loading/loading.component';\n\nexport default class Graph extends Component {\n    constructor(props) {\n        super(props);\n        this.adjacencyList = {};\n        this.individualTimes = {};\n        this.state = {\n            fastestPath: [],\n            done: undefined\n        }\n    }\n\n    componentDidUpdate(prevProps) {  \n        if (prevProps.skill !== this.props.skill) {\n                this.setState({done: undefined});\n\n                this.resetComponent();\n                this.displayResults(this.props.skill)\n                .then(response => {\n                    this.setState({done: true});\n                })\n                .catch(error => console.log(error));\n        }\n    }\n\n\n    resetComponent = () => {\n        this.setState({\n            fastestPath: []\n        })\n        this.adjacencyList = {};\n        this.individualTimes = {};\n    }\n\n    displayResults = (skill) => {\n        return new Promise((resolve, reject) => {\n\n            setTimeout(() => {\n                this.buildGraph(skill);\n\n                if (Object.keys(this.adjacencyList).length > 0) {\n                    this.addEdges();\n                    this.djikstra(1,25);\n                }\n\n                resolve(\"success\");\n            }, 2500)\n\n        });\n    }\n\n    buildGraph = (skill) => {\n        let skillNodes = this.getSkillData(skill);\n\n        for (let node of skillNodes) {\n            this.addVertex(node.name);\n            this.individualTimes[node.name] = node.time;\n        }\n    }\n\n    getSkillData = (skill) => {\n        switch(skill) {\n            case \"basic-frontend\": return basicFrontEndSkills;\n            default: return [];\n        }\n    }\n\n    addVertex = (value) => {\n        if (!this.adjacencyList[value]) {\n            this.adjacencyList[value] = []\n        }\n    }\n\n    addEdges = () => {\n        for (let edge of basicFrontEndEdges) {\n            let v1 = basicFrontEndSkills.filter((obj) =>  obj.id === edge[0])[0];\n            let v2 = basicFrontEndSkills.filter((obj) =>  obj.id === edge[1])[0];\n            this.adjacencyList[v1.name].push({node: v2.name , weight: v1.time + v2.time});\n        }\n    }\n\n    djikstra(startID, finishID) {\n        const nodes = new PriorityQueue()\n        let distances = {}\n        let previous = {}\n        let result = []\n\n        // Fetch start and finish nodes\n        let start = basicFrontEndSkills.filter((obj) => obj.id === startID)[0];\n        let finish = basicFrontEndSkills.filter((obj) => obj.id === finishID)[0];\n\n        // Build up initial state\n        for (let node in this.adjacencyList) {\n        if (node === start.name) {\n            distances[node] = 0\n            nodes.enqueue(node, distances[node])\n        } else {\n            distances[node] = Infinity\n            nodes.enqueue(node, distances[node])\n        }\n        previous[node] = null\n        }\n\n\n        // The main loop - while priority queue is populated\n\n        while (nodes.values.length) {\n        let currentNode = nodes.dequeue()\n        if (currentNode.val === finish.name) {\n            // We are done\n            let item = previous[currentNode.val]\n            let referenceToLastNode = previous[currentNode.val];\n\n            while (item) {\n            // Update state\n            result.unshift(item);\n\n            item = previous[item[0]]\n            }\n\n            this.individualTimes[finish.name] = referenceToLastNode[1];\n            result.push([finish.name, finish.time]);\n\n            this.setState({\n                fastestPath: result\n            })\n\n            break;\n        }\n\n        if (currentNode.val || distances[currentNode] !== Infinity) {\n            // Loop through neighbors of current node\n            for (let neighbor of this.adjacencyList[currentNode.val]) {\n            let candidate = currentNode.distance + neighbor.weight;\n            if (candidate < distances[neighbor.node]) {\n                distances[neighbor.node] = candidate\n                previous[neighbor.node] = [currentNode.val, currentNode.distance]\n                nodes.enqueue(neighbor.node, candidate)\n            }\n            }\n\n        }\n        }\n       \n    }\n\n    render() {\n        let graphExists = this.state.fastestPath.length > 0;\n        let output;\n        if (graphExists) {\n            output = <Table data={this.state.fastestPath} times={this.individualTimes}/>;\n        }else {\n            output = \"Sorry, we are currently working on adding this skill to our platform\"\n        }\n\n        return (\n            <div>\n                {this.props.skill !== \"\" ? (\n                !this.state.done  ? (<LoadingScreen/>): (output)\n                ) : \" \"}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    Typography, \n    makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n        title: {\n        marginTop: theme.spacing(3),\n        }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                <Typography variant=\"h6\">\n                    Rapid Skillz\n                </Typography>\n                </Toolbar>\n            </AppBar>\n            <Typography variant=\"h3\" gutterBottom={true} className={classes.title}>\n                Escape Information Overload!\n            </Typography>\n            <Typography variant=\"body1\">\n                Figure out the fastest path to mastering critical skills\n            </Typography>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Graph from './Components/graph.component';\nimport Header from './Components/Layout/header.component'\nimport { \n  FormControl,\n  Select,\n  MenuItem,\n  makeStyles } from '@material-ui/core';\n\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(3),\n      minWidth: 160,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n\n\nfunction App() {\n  const classes = useStyles();\n\n  const [skill, setSkill] = React.useState('');\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div>\n      <FormControl className={classes.formControl}>\n          {/* <InputLabel id=\"skills-input-label\">Please select a skill...</InputLabel> */}\n          <Select\n            labelId=\"skills-label\"\n            id=\"skills-dropdown\"\n            value={skill}\n            displayEmpty\n            onChange={(event) => setSkill(event.target.value)}\n          >\n            <MenuItem value=\"\">\n              Please select a skill...\n            </MenuItem>\n            <MenuItem value=\"basic-frontend\">Basic Frontend Developer</MenuItem>\n            <MenuItem value=\"intermediate-frontend\">Intermediate Frontend Developer</MenuItem>\n            <MenuItem value=\"basic-backend\">Basic Backend Developer</MenuItem>\n            <MenuItem value=\"basic-backend\">Basic Data Scientist</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <Graph skill={skill}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\npalette: {\n    primary: {\n        main: '#E85A4F'\n    },\n    secondary: {\n        main: '#00e676',\n    },\n    background: {\n        default: \"#EAE7DC\"\n    }\n},\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './Config/theme';\nimport { ThemeProvider, CssBaseline  } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}